apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  //for verifier tests
  testRuntime project('mock-plugin')
  testCompile group: 'org.codehaus.plexus', name: 'plexus-archiver', version: '2.3'

  compile project(':verifier-problems')
  compile project(':repository')
  compile project(':common-utils')
  compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
  compile group: 'com.google.guava', name: 'guava', version: '15.0'
  compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
  compile group: 'commons-io', name: 'commons-io', version: '2.3'
  compile group: 'org.jdom', name: 'jdom', version: '1.1.3'
}

task prepareMockPlugin(type: Copy) {
  def path = "$buildDir/mocks"
  doFirst { println("Copying mock plugin .jar-s to the ${path}") }
  into path
  project('mock-plugin') {
    from tasks.withType(Jar)
  }
}

task prepareAfterIdea(type: Copy) {
  project('after-idea') {
    from tasks.withType(Jar)
  }
  into "$buildDir/mocks/after-idea/lib"
}

test.dependsOn prepareMockPlugin, prepareAfterIdea

shadowJar {
  manifest {
    attributes 'Main-Class': 'com.jetbrains.pluginverifier.PluginVerifierMain'
  }
  def internalPrefix = 'com.jetbrains.pluginverifier.internal.'

  relocate('org.objectweb.asm', internalPrefix + 'asm') {}
  relocate('org.apache.commons', internalPrefix + 'apachecommons') {}
  relocate('org.jdom', internalPrefix + 'jdom') {}
  relocate('org.intellij.lang.annotations', internalPrefix + 'intellijannotations') {}
  relocate('org.jetbrains.annotations', internalPrefix + 'jetbrainsannotation') {}
  relocate('org.apache.http', internalPrefix + 'apachehttp') {}
}

jar.finalizedBy(shadowJar)